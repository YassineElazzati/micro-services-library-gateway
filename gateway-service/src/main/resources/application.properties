# Port d'écoute de la gateway
server.port=8080
spring.application.name=gateway-service

# Gateway tourne avec WebFlux (obligatoire)
spring.main.web-application-type=reactive

# Routes

# Pour /api/auteurs → microservice auteur
spring.cloud.gateway.routes[0].id=auteur-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auteurs/**

# Pour /api/livres → microservice auteur
spring.cloud.gateway.routes[1].id=livre-auteur-service
spring.cloud.gateway.routes[1].uri=http://localhost:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/livres/**

# Pour /api/clients → microservice livre
spring.cloud.gateway.routes[2].id=client-livre-service
spring.cloud.gateway.routes[2].uri=http://localhost:8082
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/clients/**

# Pour /api/commandes → microservice livre
spring.cloud.gateway.routes[3].id=commande-livre-service
spring.cloud.gateway.routes[3].uri=http://localhost:8082
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/commandes/**

# Pour forcer le routing vers les microservices et éviter qu’il cherche un fichier statique
spring.web.resources.add-mappings=false

spring.thymeleaf.check-template-location=false


# Pour les logs
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=TRACE
